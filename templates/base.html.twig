<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
        <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
        <link rel="icon" href="{{ asset('images/lettre-a.png') }}" type="image/x-icon">

       


        {% block stylesheets %}
        {% endblock %}

        {% block javascripts %}
        {% endblock %}
    </head>
<style>
    body {
        margin-top: 0px; /* Ajoute une marge négative pour compenser la barre en haut */
    }
</style>


<body class="{{ isDarkMode ? 'dark-mode' : '' }}">
    <div class="background-container"></div>
    <!-- Le reste de ton code HTML ici -->

    <style>
    #toggle-dark-mode-container {
        display: flex;
        justify-content: center;
        margin-bottom: -40px;
    }

    #toggle-dark-mode {
        background-color: transparent;
        border: none;
    }

    /* Styles pour le mode clair */

    
   
    #toggle-dark-mode-container.light-mode {
        background-color: #f2f2f2; /* Couleur de fond pour le conteneur du bouton en mode clair */
        height : 100px;
    }

    #dark-icon.light-mode,
    #light-icon.light-mode {
        background-color: #f2f2f2; /* Couleur de fond pour la ligne de l'icône en mode clair */
    }

    /* Styles pour le mode sombre */
    body.dark-mode {
        background-color: #000000; /* Couleur de fond de votre page en mode sombre */
    }

    #toggle-dark-mode-container.dark-mode {
        background-color: #000000; /* Couleur de fond pour le conteneur du bouton en mode sombre */
    }

    #dark-icon.dark-mode,
    #light-icon.dark-mode {
        background-color: #000000; /* Couleur de fond pour la ligne de l'icône en mode sombre */
    }
</style>



</body>


{% block body %}{% endblock %}

<script>
    // Fonction pour basculer le mode sombre
    function toggleDarkMode() {
        const isDarkMode = document.body.classList.toggle('dark-mode');
        const darkIcon = document.getElementById('dark-icon');
        const lightIcon = document.getElementById('light-icon');
        const backgroundContainer = document.querySelector('.background-container');

        // Change la couleur de fond en fonction du mode sombre
        const container = document.getElementById('toggle-dark-mode-container');
        container.classList.toggle('dark-mode', isDarkMode);
        darkIcon.classList.toggle('dark-mode', isDarkMode);
        lightIcon.classList.toggle('dark-mode', isDarkMode);
        backgroundContainer.classList.toggle('dark-mode', isDarkMode);

        // Change l'icône en fonction du mode sombre
        if (isDarkMode) {
            darkIcon.style.display = 'none';
            lightIcon.style.display = 'inline-block';
        } else  {
            darkIcon.style.display = 'inline-block';
            lightIcon.style.display = 'none';
        }

        // Enregistre l'état du mode sombre dans un cookie
        const cookieValue = isDarkMode ? "1" : "0";
        document.cookie = "darkMode=" + encodeURIComponent(cookieValue);

        // Débogage : Affiche la valeur du cookie dans la console
        console.log("darkMode cookie value:", cookieValue);
    }

    // Ajoute un écouteur d'événements au bouton
    const toggleButton = document.getElementById('toggle-dark-mode');
    toggleButton.addEventListener('click', toggleDarkMode);

    // Applique initialement le mode sombre si c'est activé
    const isDarkModeInitially = {{ isDarkMode ? 'true' : 'false' }} || (getCookie('darkMode') === '1') || false;
    const body = document.body;
    const lightIcon = document.getElementById('light-icon');
    const darkIcon = document.getElementById('dark-icon');
    const backgroundContainer = document.querySelector('.background-container');

    if (isDarkModeInitially) {
        body.classList.add('dark-mode');
        darkIcon.style.display = 'none';
        lightIcon.style.display = 'inline-block';
        
    } else {
        body.classList.remove('dark-mode');
        lightIcon.style.display = 'none';
        const container = document.getElementById('toggle-dark-mode-container');
        container.classList.add('light-mode');
    }

    // Applique la taille de 90px aux icônes
    const iconElements = document.querySelectorAll('#dark-icon img, #light-icon img');
    iconElements.forEach(function(icon) {
        icon.style.width = '90px';
        icon.style.height = '90px';
    });

    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
    }
</script>







    </body>
</html>
